<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/change-donor.css" />
    <link rel="icon" href="/assets/img/logo-pic.png" type="image/x-icon" />
    <link rel="stylesheet" href="/assets/font/fontawesome-free-6.2.1-web/fontawesome-free-6.2.1-web/css/all.css" />
    <link rel="stylesheet" href="/assets/bootstrap/bootstrap-4.6.2-dist/css/bootstrap.css" />
    <title>BloodDono-Thay đổi thông tin</title>
</head>

<body>
    <div id="header">
        <div class="container-fluid">
            <div class="row">
                <a href="/" class="logo">
                    <div class="logo-pic line">
                        <img src="/assets/img/logo-pic.png" alt="" />
                    </div>
                    <div class="logo-name line">BloodDono</div>
                </a>

                <div class="log-in-out">
                    <i class="fa-solid fa-bell"></i>
                    <i class="fa-solid fa-right-from-bracket"></i>
                </div>
            </div>
        </div>
    </div>

    <div id="content">
        <div class="container d-flex justify-content-center">
            <div class="row donor-box d-flex justify-content-around">
                <div class="col-3">
                    <!-- Hình ảnh và tên user -->
                    <div class="user-interface">
                        <img src="/assets/img/help.png" alt="" class="user-avt" />
                        <div class="user-name">Fujiguro Toji</div>
                        <div class="edit-tag">
                            <i class="fa-regular fa-pen-to-square"></i> Chỉnh sửa
                        </div>
                    </div>
                    <!-- ------------------------------------- -->

                    <!-- Các chức năng -->
                    <div class="confirm-btn">
                        <button class="btn confirm">Thay đổi</button>
                        <button class="btn back">Trở về</button>
                    </div>
                    <!-- ------------------------------------- -->
                </div>

                <div class="col-8">
                    <!-- Thông tin cá nhân -->
                    <div class="basic info">
                        <div class="row">
                            <div class="frame">
                                <label for="">Họ và tên</label> <br />
                                <input type="text" name="name" id="name" value="" />
                            </div>
                            <div class="frame">
                                <label for="">Ngày sinh</label> <br />
                                <input type="date" name="" id="birth" value="" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="frame">
                                <label for="">Số điện thoại</label> <br />
                                <input type="tel" name="" id="phoneNumber" value="" />
                            </div>
                            <div class="frame">
                                <label for="">Email cá nhân</label> <br />
                                <input type="email" name="" id="email" value="" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="frame">
                                <label for="">Địa chỉ</label> <br />
                                <input type="text" name="" id="street" value="" class="input-adr record"
                                    placeholder="Số nhà, tên đường" />
                            </div>
                        </div>
                        <div class="row combobox">
                            <select name="" class="" id="ward"></select>
                            <select name="" class="" id="district"></select>
                            <select name="" class="" id="province"></select>
                        </div>
                    </div>
                    <!-- ---------------------------------------- -->

                    <!-- Thông tin sức khỏe -->

                    <div class="health info">
                        <div class="row">
                            <div class="frame">
                                <label for="">Chiều cao (cm)</label> <br />
                                <input type="text" name="" id="height" />
                            </div>
                            <div class="frame">
                                <label for="">Cân nặng (kg)</label> <br />
                                <input type="text" name="" id="weight" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="frame">
                                <label for="">Giới tính</label> <br />
                                <input type="text" name="" id="gender" />
                            </div>
                            <div class="frame">
                                <label for="">Nhóm máu</label> <br />
                                <select class="customize blood-type" id="bloodType" name="blood-type" required>
                                    <option value="" selected disabled hidden>Chọn nhóm máu</option>
                                    <optgroup label="Nhóm máu A">
                                        <option value="A+">A+</option>
                                        <option value="A-">A-</option>
                                    </optgroup>
                                    <optgroup label="Nhóm máu B">
                                        <option value="B+">B+</option>
                                        <option value="B-">B-</option>
                                    </optgroup>
                                    <optgroup label="Nhóm máu AB">
                                        <option value="AB+">AB+</option>
                                        <option value="AB-">AB-</option>
                                    </optgroup>
                                    <optgroup label="Nhóm máu O">
                                        <option value="O+">O+</option>
                                        <option value="O-">O-</option>
                                    </optgroup>
                                </select>
                            </div>
                        </div>

                        <label for="">Lịch sử bệnh án</label> <br />
                        <select class="customize med-history" id="illness" placeholder="Tiền sử bệnh án">
                        </select>
                        <div id="medical"></div>
                    </div>
                    <!-- ---------------------------------------- -->
                </div>
            </div>
        </div>
    </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<!-- get data for address -->
<script>
    const province = document.getElementById("province");
    const district = document.getElementById("district");
    const ward = document.getElementById("ward");
    const street = document.getElementById("street");
    province.addEventListener("change", (e) => {
        const province_id = e.target.value;
        axios
            .get(`http://localhost:3000/api/address/district/${province_id}`)
            .then((response) => {
                // handle success
                const data = response.data;
                district.innerHTML = `<option value="default" selected disabled hidden>Chọn huyện/phường</option>`;
                ward.innerHTML = `<option value="default" selected disabled hidden>Chọn xã</option>`;
                data.forEach((element) => {
                    district.innerHTML += `<option value="${element.District_id}">${element.Name}</option>`;
                });
            })
            .catch((error) => {
                // handle error
                console.log(error);
            });
    });
    district.addEventListener("change", (e) => {
        const district_id = e.target.value;
        axios
            .get(`http://localhost:3000/api/address/ward/${district_id}`)
            .then((response) => {
                // handle success
                const data = response.data;
                ward.innerHTML = `<option value="default" selected disabled hidden>Chọn xã</option>`;
                data.forEach((element) => {
                    ward.innerHTML += `<option value="${element.Wards_id}">${element.Name}</option>`;
                });
            })
            .catch((error) => {
                // handle error
                console.log(error);
            });
    });
    // show info
    const username = "<%= username %>";
    let userData;
    let selectedIllnessList = [];
    axios
        .get(`http://localhost:3000/api/user/${username}`)
        .then(function (response) {
            // handle success
            userData = response.data.data;
            const name = document.getElementById("name");
            name.value = userData.name;
            const birth = document.getElementById("birth");
            birth.value = userData.birth;
            const phoneNumber = document.getElementById("phoneNumber");
            phoneNumber.value = userData.phoneNumber;
            const email = document.getElementById("email");
            email.value = userData.email;
            street.value = userData.address.street ? userData.address.street : "";
            const height = document.getElementById("height");
            height.value = userData.height;
            const weight = document.getElementById("weight");
            weight.value = userData.weight;
            const gender = document.getElementById("gender");
            gender.value = userData.gender ? "Nam" : "Nữ";
            const bloodType = document.getElementById("bloodType");
            //set selected blood type
            for (let i = 0; i < bloodType.options.length; i++) {
                if (bloodType.options[i].text == userData.bloodType) {
                    bloodType.selectedIndex = i;
                    break;
                }
            }
            axios
                .get("http://localhost:3000/api/address/province")
                .then((response) => {
                    // handle success
                    const data = response.data;
                    data.forEach((element) => {
                        province.innerHTML += `<option value="${element.Province_id}">${element.Name}</option>`;
                    });
                    let province_id;
                    for (let i = 0; i < province.options.length; i++) {
                        if (province.options[i].text == userData.address.province) {
                            province_id = province.options[i].value;
                            province.selectedIndex = i;
                            break;
                        }
                    }
                    //get selected province value
                    axios
                        .get(`http://localhost:3000/api/address/district/${province_id}`)
                        .then((response) => {
                            // handle success
                            const data = response.data;
                            data.forEach((element) => {
                                district.innerHTML += `<option value="${element.District_id}">${element.Name}</option>`;
                            });
                            let district_id;
                            for (let i = 0; i < district.options.length; i++) {
                                if (district.options[i].text == userData.address.district) {
                                    district_id = district.options[i].value;
                                    district.selectedIndex = i;
                                    break;
                                }
                            }
                            axios
                                .get(`http://localhost:3000/api/address/ward/${district_id}`)
                                .then((response) => {
                                    // handle success
                                    const data = response.data;
                                    data.forEach((element) => {
                                        ward.innerHTML += `<option value="${element.Wards_id}">${element.Name}</option>`;
                                    });
                                    for (let i = 0; i < ward.options.length; i++) {
                                        if (ward.options[i].text == userData.address.ward) {
                                            ward.selectedIndex = i;
                                            break;
                                        }
                                    }
                                })
                                .catch((error) => {
                                    // handle error
                                    console.log(error);
                                });
                        })
                        .catch((error) => {
                            // handle error
                            console.log(error);
                        });
                })
                .catch((error) => {
                    // handle error
                    console.log(error);
                });
            // get medical history
            //add illness
            const medical = document.getElementById("medical");
            const illnessList = document.getElementById("illness");
            axios.get("http://localhost:3000/api/illness")
                .then((response) => {
                    // handle success
                    let data = response.data.data;
                    let optionList = '<option value="" selected disabled hidden>Chọn bệnh án</option>'
                    data.forEach(element => {
                        optionList += `<option value="${element.IllnessID}">${element.IllnessName}</option>`
                    });
                    illnessList.innerHTML = optionList;
                })
                .catch((error) => {
                    // handle error
                    console.log(error);
                });
            illnessList.addEventListener("change", (event) => {
                const illnessName = event.target.options[event.target.selectedIndex].text
                const illnessID = event.target.value;
                medical.innerHTML += `<input type="text" title="${illnessName}" class="sick-tag med-history" value="${illnessName}" readonly required/>`;
                selectedIllnessList.push(illnessID);
            });
        })
        .catch(function (error) {
            // handle error
            console.log(error);
        });
    // update info
    const confirmBtn = document.querySelector(".confirm");
    const backBtn = document.querySelector(".back");
    confirmBtn.addEventListener("click", (e) => {
        e.preventDefault();
        const name = document.getElementById('name').value;
        const male = document.getElementById('gender');
        let gender = 0;
        if (male == "Nam")
            gender = 1;
        const birth = document.getElementById('birth').value;
        const height = parseInt(document.getElementById('height').value);
        const weight = parseFloat(document.getElementById('weight').value);
        const bloodType = document.getElementById('bloodType').value;
        const phoneNumber = document.getElementById('phoneNumber').value;
        const email = document.getElementById('email').value;
        const province = parseInt(document.getElementById('province').value);
        const district = parseInt(document.getElementById('district').value);
        const ward = parseInt(document.getElementById('ward').value);
        const street = document.getElementById('street').value;
        const address = {
            street,
            ward,
            district,
            province
        }
        const data = {
            name,
            gender,
            birth,
            height,
            weight,
            bloodType,
            address,
            phoneNumber,
            email,
            selectedIllnessList
        }
        axios.post(`http://localhost:3000/user/${username}/update-profile`, data)
            .then((response) => {
                // handle success
                alert('Cập nhật thành công');
                window.location.href = `http://localhost:3000/user/${username}`;
            })
            .catch((error) => {
                // handle error
                console.log(error);
                alert('Cập nhật thất bại');
            });

    });
    backBtn.addEventListener("click", () => {
        window.location.href = `http://localhost:3000/user/${username}`;
    });
</script>

</html>